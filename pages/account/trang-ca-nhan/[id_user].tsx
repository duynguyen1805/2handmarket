import Footer from "@/components/Footer";
import Header from "@/components/Header";
import Head from "next/head";
import router from "next/router";
import { authMiddleware } from "@/utils/authMiddleware";
import { GetServerSideProps } from "next";
import React, { useEffect, useState } from "react";
import Image from "next/image";
import left_back from "../../../assets/icon/left-arrow.png";
import "react-phone-input-2/lib/style.css";
// toast thông báo
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";

import { API_getTindangbyIduser } from "@/service/userService";
import Danhmuc from "@/components/Danhmuc";
import { motion } from "framer-motion";
import { useMyContext } from "@/contexts/MyContext";
import Display_product_vertical from "@/components/Display_product_vertical";
import jwt from "jsonwebtoken";
import { sign, verify, Secret } from "jsonwebtoken";
import Cookies from "js-cookie";

interface infodetailProps {
  id_user: string;
}
const Trang_ca_nhan = ({ id_user }: infodetailProps) => {
  const [tindang, setTindang] = useState<any>([]);
  const allowedRoles = ["Admin", "Client"];
  const checkRoleMiddleware = authMiddleware(allowedRoles);

  const [datainforUser_current, setdatainforUser_current] = useState<any>();
  const [datainforUser, setdatainforUser] = useState<any>();
  useEffect(() => {
    //lấy thông tin người dùng Đăng nhập
    const token: any = localStorage.getItem("token");
    const token_cookie: any = Cookies.get("jwt_token");
    const parse_token = JSON.parse(token);
    if (parse_token && token_cookie) {
      let jwt_key = "2handmarket_tdn" || process.env.NEXT_PUBLIC_JWT_SECRET;
      if (!jwt_key) {
        throw new Error(
          "JWT_SECRET is not defined in the environment variables."
        );
      }
      const jwt_secret: Secret = jwt_key;
      try {
        const decoded = jwt.verify(parse_token, jwt_secret);
        setdatainforUser_current(decoded);
      } catch (error) {
        console.log("Lỗi decoded token: ", error);
        setdatainforUser_current(null);
      }
    }
  }, []);
  const inputDate = new Date(datainforUser?.createdAt);
  const day = inputDate.getUTCDate();
  const month = inputDate.getUTCMonth() + 1;
  const year = inputDate.getUTCFullYear();
  const formatted_ngaythamgia = `${day < 10 ? "0" : ""}${day}-${
    month < 10 ? "0" : ""
  }${month}-${year}`;

  useEffect(() => {
    fetchdata_tindang_user();
  }, []);
  const fetchdata_tindang_user = async () => {
    try {
      const response = await API_getTindangbyIduser(id_user);
      setTindang(response.tindang);
      setdatainforUser(response.tindang[0]);
    } catch (error) {
      console.error("Error fetching data:", error);
    }
  };
  const listFilter = [
    { id: 2, name: "Đang hiển thị" },
    // { id: 4, name: "Đã bán" },
  ];
  const [isOpen, setIsOpen] = useState<number | null>(2);
  const filteredList =
    isOpen === -1
      ? tindang
      : tindang.filter((item: any) => item.trangthai === isOpen);

  const handleClickfilted = (key: number) => {
    fetchdata_tindang_user();
    setIsOpen(key);
  };

  const handleClickMessage = () => {
    if (datainforUser_current) {
      const query: any = {
        current_user_name: datainforUser_current?.name,
        id_receiver: datainforUser._id,
        name_receiver: datainforUser.name,
      };
      router.push({
        pathname: `/account/tin-nhan/${datainforUser_current?._id}`,
        query,
      });
    } else {
      router.push("/account/login");
    }
  };

  return (
    <div className="">
      <Head>
        <title>Trang cá nhân</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/icon_2handmarket.png" />
      </Head>
      <Header />
      <div className="h-auto w-full bg-gray-100 pt-3">
        {/* Điều hướng - show infor */}
        <div className="h-auto w-full flex flex-col items-center justify-center space-y-3">
          <div className="h-[60px] w-auto sm:w-full lg:min-w-[1440px] lg:w-[1440px] bg-white text-xl flex items-center p-1 rounded-lg shadow-md">
            <Danhmuc />
            <p className="h-full w-auto flex items-center ml-3">
              Trang chủ / Trang cá nhân
            </p>
          </div>
          <div className="h-[160px] w-auto sm:w-full lg:min-w-[1440px] lg:w-[1440px] bg-white text-xl p-1 rounded-lg shadow-md">
            <motion.div
              initial={{ opacity: 0, x: 30 }}
              animate={{
                opacity: 1,
                x: 0,
                transition: { duration: 0.5 },
              }}
              className="h-[150px] w-auto lg:w-[952px] flex items-center p-1 space-x-3"
            >
              <div className="h-[150px] w-[150px] flex items-center justify-center">
                <div
                  className="h-[120px] w-[120px] border-4 border-mauxanhtroi rounded-full bg-cover bg-no-repeat bg-center"
                  style={{
                    backgroundImage: `url(${datainforUser?.img})`,
                  }}
                ></div>
              </div>
              <div className="h-full lg:w-[802px] sm:w-full">
                <div className="h-2/3 w-full">
                  <div className="h-auto">
                    {datainforUser?.name} - {datainforUser?.account}
                  </div>
                  <div className="h-auto">{datainforUser?.address}</div>
                  <div className="h-auto">
                    Tham gia ngày: {formatted_ngaythamgia}
                  </div>
                </div>
                <div className="h-1/3 w-full flex items-center">
                  {datainforUser?._id === datainforUser_current?._id && (
                    <div
                      className="w-auto bg-mauxanhtroi text-white flex items-center justify-center px-2 py-2 rounded-md cursor-pointer hover:opacity-80"
                      onClick={() =>
                        router.push(`/account/${datainforUser?._id}`)
                      }
                    >
                      Chỉnh sửa thông tin cá nhân
                    </div>
                  )}
                  {datainforUser?._id !== datainforUser_current?._id && (
                    <div
                      className="w-auto bg-mauxanhtroi text-white flex items-center justify-center px-2 py-2 rounded-md cursor-pointer hover:opacity-80"
                      onClick={handleClickMessage}
                    >
                      Nhắn tin liên hệ
                    </div>
                  )}
                </div>
              </div>
            </motion.div>
          </div>
        </div>
        <div className="h-auto w-full flex items-center justify-center mt-1">
          <div className="h-auto w-[1440px] mt-3 px-1 border rounded-lg bg-white overflow-auto">
            {/* display medium */}
            <div className="sm:hidden md:flex h-auto min-h-[570px] w-[100%] px-1 flex-col items-center overflow-auto">
              <motion.div
                initial={{ opacity: 0, x: 20 }}
                animate={{
                  opacity: 1,
                  x: 0,
                  transition: { duration: 0.5, delay: 0.2 },
                }}
                className="h-[50px] w-full mb-2 flex"
              >
                {listFilter &&
                  listFilter.map((item_listFilter: any) => {
                    return (
                      <div
                        key={item_listFilter.id}
                        className={
                          isOpen !== item_listFilter.id
                            ? `h-full min-w-[150px] flex items-center justify-center text-lg hover:border-b-2 hover:border-blue-600 cursor-pointer`
                            : `h-full min-w-[150px] flex items-center justify-center text-lg border-b-4 border-blue-600 cursor-pointer`
                        }
                        onClick={() => handleClickfilted(item_listFilter.id)}
                      >
                        {item_listFilter.name}
                      </div>
                    );
                  })}
              </motion.div>

              <div className="h-auto w-full flex justify-center flex-wrap gap-[10px] overflow-auto py-2">
                {filteredList &&
                  filteredList.lenght !== 0 &&
                  filteredList.map((item: any, index: number) => {
                    return (
                      <div key={index}>
                        <Display_product_vertical item={item} />
                      </div>
                    );
                  })}
              </div>
            </div>
          </div>
        </div>
      </div>
      <Footer />
    </div>
  );
};

// truyen id user
export const getServerSideProps: GetServerSideProps<infodetailProps> = async (
  context
) => {
  const { id_user } = context.params as {
    id_user: string;
  };

  return {
    props: {
      id_user: id_user as string,
    },
  };
};

export default Trang_ca_nhan;
